apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-migrate

  labels:
    app.kubernetes.io/name: {{ .Chart.Name}}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: migration
    app.kubernetes.io/part-of: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}

  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-migrate
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}

    spec:
      restartPolicy: Never
      containers:
      - name: migrate-database
        image: {{ .Values.php.image.name }}:{{ .Values.php.image.tag }}
        imagePullPolicy: Always
        command: ["composer"]
        args: ["phinx:migrate"]
        resources:
          requests:
            memory: "64Mi"
            cpu: "64m"
          limits:
            memory: "128Mi"
            cpu: "128m"
        env:    
          - name: DB_TYPE
            value: postgresql

          - name: DATABASE_HOST
            value: {{ .Release.Name }}-pgbouncer

          - name: POSTGRES_DB
            value: {{ .Values.postgres.dbname }}

          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-postgres
                key: username 

          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-postgres
                key: password 