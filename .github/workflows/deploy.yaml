# .github/workflows/deploy.yml
name: Deploy to Kubernetes 
on: 
  workflow_call:
    inputs:
      envName:
        description: 'Environment to deploy to'
        required: true
        type: string
        default: staging
      
      envUrl:
        description: 'URL of the environment'
        required: true
        type: string
        default: 'staging.kissj.net'

  workflow_dispatch:
    inputs:
      envName:
        description: 'Environment to deploy to'
        required: true
        type: string
        default: staging
      envUrl:
        description: 'URL of the environment'
        required: true
        type: string
        default: 'staging.kissj.net'

jobs:
  deploy-stage:
    name: Deploy Staging to Kubernetes
    runs-on: 'ubuntu-latest'
    environment: 
      name: ${{ inputs.envName }}
      url: ${{ inputs.envUrl }}
    steps:
    - uses: actions/checkout@v1

    - name: 'Deploy'
      uses: 'vimeda/helm@v1.6.8'
      with:
        release: kissj-${{ inputs.envName }}
        namespace: 'kissj-${{ inputs.envName }}'
        chart: 'deploy/helm/charts/kissj'
        helm: 'helm3'
        atomic: true
        token: '${{ github.token }}'
        secrets: |
          {
              "postgres": [
                  {"username": "${{ secrets.POSTGRES_USERNAME }}" }, 
                  {"password": "${{ secrets.POSTGRES_PASSWORD }}" },
                  {"host": "${{ secrets.POSTGRES_HOST }}" },
                  {"dbname": "${{ secrets.POSTGRES_DBNAME }}" }
              ], 
              "app": {
                  "s3": [
                      {"endpoint": "${{ secrets.S3_ENDPOINT }}" }, 
                      {"region": "${{ secrets.S3_REGION }}" },
                      {"bucket": "${{ secrets.S3_BUCKET }}" },
                      {"key": "${{ secrets.S3_KEY }}" },
                      {"secret": "${{ secrets.S3_SECRET }}" }
                  ], 
                  "mail": [
                      {"server": "${{ secrets.MAIL_SERVER }}" },
                      {"port": "${{ secrets.MAIL_PORT }}" },
                      {"username": "${{ secrets.MAIL_USERNAME }}" },
                      {"password": "${{ secrets.MAIL_PASSWORD }}" },
                      {"dsn": "${{ secrets.MAIL_DSN }}" }
                  ], 

                  "sentry": [
                      {"dsn": "${{ secrets.SENTRY_DSN }}" }
                  ]
              }
          }
        values: |
          postgres:
            incluster: true
          caddy:
            image:
              name: quay.io/kissj/caddy-ubi
              tag: ${{ inputs.envName}}-${{ github.sha }}
          php:
            image:
              name: quay.io/kissj/php-ubi
              tag: ${{ inputs.envName}}-${{ github.sha }}
          app:
            url: ${{ inputs.envUrl }}

      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
