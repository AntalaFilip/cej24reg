resource_types:

- name: slack-alert
  type: registry-image
  source:
    repository: arbourd/concourse-slack-alert-resource

- name: helm-deploy
  type: registry-image
  source:
    repository: typositoire/concourse-helm3-resource

resources:
- name: kissj-app
  type: git
  icon: github
  source:
    uri: https://github.com/SkautDevs/kissj.git
    branch: master

- name: kissj-php-registry
  type: registry-image
  icon: docker
  source:
    repository: quay.io/kissj/php
    tag: latest
    username: ((kissj-registry.username))
    password: ((kissj-registry.password))

- name: kissj-caddy-registry
  type: registry-image
  icon: docker
  source:
    repository: quay.io/kissj/caddy
    tag: latest
    username: ((kissj-registry.username))
    password: ((kissj-registry.password))

- name: kissj-aks-cluster
  type: helm-deploy
  source:
    cluster_url: ((concourse-ci.cluster_url))
    cluster_ca: ((concourse-ci.cluster_ca))
    token: ((concourse-ci.token))
    namespace: kissj-prod
    release: kissj
    
- name: slack-notify
  type: slack-alert
  source:
    url: ((slack-webhook.webhook))

jobs:
- name: tests

  on_success:
    put: slack-notify
    params:
      alert_type: sucess
  on_failure:
    put: slack-notify
    params:
      alert_type: failed
  on_error:
    put: slack-notify
    params:
      alert_type: errored

  plan:
  - in_parallel:

    - get: kissj-app
      trigger: true

  - task: install-dependencies
    file: kissj-app/ci/tasks/install-deps-task.yaml
    output_mapping:
      kissj-app: kissj-app   

  - try:
      in_parallel:
        - task: lint-code
          file: kissj-app/ci/tasks/lint-task.yaml
        - task: stan
          file: kissj-app/ci/tasks/stan-task.yaml
        - task: unit-test
          file: kissj-app/ci/tasks/unit-task.yaml
        - task: lint-helm-chart
          file: kissj-app/ci/tasks/helm-lint-task.yaml
      

      
#Build and push container images           
- name: build-and-push
  
  on_success:
    put: slack-notify
    params:
      alert_type: sucess
  on_failure:
    put: slack-notify
    params:
      alert_type: failed
  on_error:
    put: slack-notify
    params:
      alert_type: errored

  plan:
  - in_parallel:
     - get: kissj-app
       trigger: true      
       passed: [tests]    
  
  - in_parallel:

      - do:  
        - task: build-php-image
          file: kissj-app/ci/tasks/build-image-task.yaml
          privileged: true
          output_mapping:
            image: php-image

          params:
            DOCKERFILE: kissj-app/deploy/container_images/php/Containerfile

        - put: kissj-php-registry
          attempts: 10
          params:
            image: php-image/image.tar
            additional_tags: kissj-app/.git/short_ref

      - do:
          - task: build-caddy-image
            file: kissj-app/ci/tasks/build-image-task.yaml
            privileged: true
            output_mapping:
              image: caddy-image
          
            params:
              DOCKERFILE: kissj-app/deploy/container_images/caddy/Containerfile       
      
          - put: kissj-caddy-registry
            attempts: 10
            params: 
              image: caddy-image/image.tar
              additional_tags: kissj-app/.git/short_ref 
      


#Deploy prod to k8s
- name: deploy-prod

  on_success:
    put: slack-notify
    params:
      alert_type: sucess
  on_failure:
    put: slack-notify
    params:
      alert_type: failed
  on_error:
    put: slack-notify
    params:
      alert_type: errored

  plan:
  - in_parallel:
    - get: kissj-app
      trigger: true
      passed: [build-and-push]

    - get: kissj-caddy-registry
      trigger: true
      passed: [build-and-push]
    
    - get: kissj-php-registry
      trigger: true
      passed: [build-and-push]
    
    - get: kissj-aks-cluster

  - put: kissj-aks-cluster
    params:
      chart: kissj-app/deploy/helm/charts/kissj
      namespace: kissj-prod
      release: kissj
      check_is_ready: true
      override_values:
#postgres values
      - key: postgres.incluster
        value: false
        type: boolean

      - key: postgres.username
        value: ((postgres.username))
        type: string
        hide: true

      - key: postgres.password
        value: ((postgres.password))
        type: string
        hide: true

      - key: postgres.dbname
        value: ((postgres.dbname))
        type: string
        hide: true

      - key: postgres.host
        value: ((postgres.host))
        type: string
        hide: true
#caddy values
      - key: caddy.image.name
        value: quay.io/kissj/caddy
        type: string

      - key: caddy.image.tag
        path: kissj-app/.git/short_ref
        type: string
#php values
      - key: php.image.name
        value: quay.io/kissj/php
        type: string

      - key: php.image.tag
        path: kissj-app/.git/short_ref
        type: string
#app values
      - key: app.url 
        value: kissj.net

      - key: app.adminer.username
        value: ((adminer.username))
        hide: true

      - key: app.adminer.password
        value: ((adminer.password))
        hide: true

      - key: app.s3.key
        value: ((s3.key))
        hide: true

      - key: app.s3.secret
        value: ((s3.secret))
        hide: true

      - key: app.s3.region
        value: ((s3.region))
        hide: true

      - key: app.s3.endpoint
        value: ((s3.endpoint))
        hide: true

      - key: app.s3.bucket
        value: ((s3.bucket))
        hide: true

      - key: app.mail.server
        value: ((mail.server))
        hide: true

      - key: app.mail.port
        value: ((mail.port))

      - key: app.mail.encryption
        value: tls

      - key: app.mail.username
        value: ((mail.username))
        hide: true

      - key: app.mail.password
        value: ((mail.password))
        hide: true

      - key: app.sentry.dsn
        value: ((sentry.dsn))
        hide: true